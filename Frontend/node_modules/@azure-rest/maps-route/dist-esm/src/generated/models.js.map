{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../src/generated/models.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/** An object with a matrix of coordinates. */\nexport interface RouteMatrixQuery {\n  /** A valid `GeoJSON MultiPoint` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.3) for details. */\n  origins: GeoJsonMultiPoint;\n  /** A valid `GeoJSON MultiPoint` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.3) for details. */\n  destinations: GeoJsonMultiPoint;\n}\n\n/** A valid `GeoJSON MultiPoint` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.3) for details. */\nexport interface GeoJsonMultiPoint\n  extends GeoJsonGeometryParent,\n    GeoJsonMultiPointData {\n  type: \"MultiPoint\";\n}\n\n/** A valid `GeoJSON` geometry object. The type must be one of the seven valid GeoJSON geometry types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon and GeometryCollection. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1) for details. */\nexport interface GeoJsonGeometryParent extends GeoJsonObjectParent {\n  type:\n    | \"GeoJsonGeometry\"\n    | \"MultiPoint\"\n    | \"MultiPolygon\"\n    | \"Point\"\n    | \"LineString\"\n    | \"MultiLineString\"\n    | \"Polygon\"\n    | \"GeometryCollection\";\n}\n\n/** A valid `GeoJSON` object. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3) for details. */\nexport interface GeoJsonObjectParent {\n  type:\n    | \"GeoJsonObject\"\n    | \"GeoJsonGeometry\"\n    | \"MultiPoint\"\n    | \"MultiPolygon\"\n    | \"Point\"\n    | \"LineString\"\n    | \"MultiLineString\"\n    | \"Polygon\"\n    | \"GeometryCollection\"\n    | \"Feature\"\n    | \"FeatureCollection\";\n}\n\n/** Data contained by a `GeoJson MultiPoint`. */\nexport interface GeoJsonMultiPointData {\n  /** Coordinates for the `GeoJson MultiPoint` geometry. */\n  coordinates: Array<Array<number>>;\n}\n\n/** Post body parameters for Route directions. */\nexport interface RouteDirectionParameters {\n  /**\n   * A GeoJSON Geometry collection representing sequence of coordinates used as input for route reconstruction and for calculating zero or more alternative routes to this reference route.\n   *   - The provided sequence of supporting points is used as input for route reconstruction.\n   *   - The alternative routes are calculated between the origin and destination points specified in the base path parameter locations.\n   *   - If both _minDeviationDistance_ and _minDeviationTime_ are set to zero, then these origin and destination points are\n   *   expected to be at (or very near) the beginning and end of the reference route, respectively.\n   *   - Intermediate locations (_waypoints_) are not supported when using <_supportingPoints_>.\n   *   - The reference route may contain traffic incidents of type _ROAD_CLOSURE_, which are\n   *   ignored for the calculation of the reference route's travel time and traffic delay.\n   */\n  supportingPoints?: Record<string, unknown>;\n  /** This is a list of 3-character, ISO 3166-1, alpha-3 country codes of countries in which all toll roads with vignettes are to be avoided, e.g. \"AUS,CHE\". Toll roads with vignettes in countries not in the list are unaffected. Note: It is an error to specify both **avoidVignette** and **allowVignette**. */\n  avoidVignette?: Array<string>;\n  /** This is a list of 3-character, ISO 3166-1, alpha-3 country codes of countries in which toll roads with vignettes are allowed, e.g. \"AUS,CHE\". Specifying **allowVignette** with some countries X is equivalent to specifying **avoidVignette** with all countries but X. Specifying **allowVignette** with an empty list is the same as avoiding all toll roads with vignettes. Note: It is an error to specify both **avoidVignette** and **allowVignette**. */\n  allowVignette?: Array<string>;\n  /** A GeoJSON MultiPolygon representing list of areas to avoid. Only rectangle polygons are supported. The maximum size of a rectangle is about 160x160 km. Maximum number of avoided areas is **10**. It cannot cross the 180th meridian. It must be between -80 and +80 degrees of latitude. */\n  avoidAreas?: GeoJsonMultiPolygon;\n}\n\n/** A valid `GeoJSON MultiPolygon` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.7) for details. */\nexport interface GeoJsonMultiPolygon\n  extends GeoJsonGeometryParent,\n    GeoJsonMultiPolygonData {\n  type: \"MultiPolygon\";\n}\n\nexport interface GeoJsonMultiPolygonData {\n  /** Contains a list of valid `GeoJSON Polygon` objects. **Note** that coordinates in GeoJSON are in x, y order (longitude, latitude). */\n  coordinates: Array<Array<Array<Array<number>>>>;\n}\n\n/** This type represents the request body for the Batch service. */\nexport interface BatchRequest {\n  /** The list of queries to process. */\n  batchItems?: Array<BatchRequestItem>;\n}\n\n/** Batch request object */\nexport interface BatchRequestItem {\n  /** This parameter contains a query string used to perform an unstructured geocoding operation. The query string will be passed verbatim to the search API for processing. */\n  query?: string;\n}\n\n/** A valid `GeoJSON Point` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.2) for details. */\nexport interface GeoJsonPoint extends GeoJsonGeometryParent, GeoJsonPointData {\n  type: \"Point\";\n}\n\n/** Data contained by a `GeoJson Point`. */\nexport interface GeoJsonPointData {\n  /** A `Position` is an array of numbers with two or more elements. The first two elements are _longitude_ and _latitude_, precisely in that order. _Altitude/Elevation_ is an optional third element. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.1) for details. */\n  coordinates: Array<number>;\n}\n\n/** A valid `GeoJSON LineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.4) for details. */\nexport interface GeoJsonLineString\n  extends GeoJsonGeometryParent,\n    GeoJsonLineStringData {\n  type: \"LineString\";\n}\n\nexport interface GeoJsonLineStringData {\n  /** Coordinates for the `GeoJson LineString` geometry. */\n  coordinates: Array<Array<number>>;\n}\n\n/** A valid `GeoJSON MultiLineString` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.5) for details. */\nexport interface GeoJsonMultiLineString\n  extends GeoJsonGeometryParent,\n    GeoJsonMultiLineStringData {\n  type: \"MultiLineString\";\n}\n\nexport interface GeoJsonMultiLineStringData {\n  /** Coordinates for the `GeoJson MultiLineString` geometry. */\n  coordinates: Array<Array<Array<number>>>;\n}\n\n/** A valid `GeoJSON Polygon` geometry type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.6) for details. */\nexport interface GeoJsonPolygon\n  extends GeoJsonGeometryParent,\n    GeoJsonPolygonData {\n  type: \"Polygon\";\n}\n\nexport interface GeoJsonPolygonData {\n  /** Coordinates for the `GeoJson Polygon` geometry type. */\n  coordinates: Array<Array<Array<number>>>;\n}\n\n/** A valid `GeoJSON GeometryCollection` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1.8) for details. */\nexport interface GeoJsonGeometryCollection\n  extends GeoJsonGeometryParent,\n    GeoJsonGeometryCollectionData {\n  type: \"GeometryCollection\";\n}\n\nexport interface GeoJsonGeometryCollectionData {\n  /** Contains a list of valid `GeoJSON` geometry objects. **Note** that coordinates in GeoJSON are in x, y order (longitude, latitude). */\n  geometries: Array<GeoJsonGeometry>;\n}\n\n/** A valid `GeoJSON Feature` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.2) for details. */\nexport interface GeoJsonFeature\n  extends GeoJsonObjectParent,\n    GeoJsonFeatureData {\n  type: \"Feature\";\n}\n\nexport interface GeoJsonFeatureData {\n  /** A valid `GeoJSON` geometry object. The type must be one of the seven valid GeoJSON geometry types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon and GeometryCollection. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1) for details. */\n  geometry: GeoJsonGeometry;\n  /** Properties can contain any additional metadata about the `Feature`. Value can be any JSON object or a JSON null value */\n  properties?: Record<string, unknown>;\n  /** Identifier for the feature. */\n  id?: string;\n  /** The type of the feature. The value depends on the data model the current feature is part of. Some data models may have an empty value. */\n  featureType?: string;\n}\n\n/** A valid `GeoJSON FeatureCollection` object type. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.3) for details. */\nexport interface GeoJsonFeatureCollection\n  extends GeoJsonObjectParent,\n    GeoJsonFeatureCollectionData {\n  type: \"FeatureCollection\";\n}\n\nexport interface GeoJsonFeatureCollectionData {\n  /** Contains a list of valid `GeoJSON Feature` objects. */\n  features: Array<GeoJsonFeature>;\n}\n\n/** A valid `GeoJSON` geometry object. The type must be one of the seven valid GeoJSON geometry types - Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon and GeometryCollection. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3.1) for details. */\nexport type GeoJsonGeometry =\n  | GeoJsonGeometryParent\n  | GeoJsonMultiPoint\n  | GeoJsonMultiPolygon\n  | GeoJsonPoint\n  | GeoJsonLineString\n  | GeoJsonMultiLineString\n  | GeoJsonPolygon\n  | GeoJsonGeometryCollection;\n/** A valid `GeoJSON` object. Please refer to [RFC 7946](https://tools.ietf.org/html/rfc7946#section-3) for details. */\nexport type GeoJsonObject =\n  | GeoJsonGeometry\n  | GeoJsonMultiPoint\n  | GeoJsonMultiPolygon\n  | GeoJsonPoint\n  | GeoJsonLineString\n  | GeoJsonMultiLineString\n  | GeoJsonPolygon\n  | GeoJsonGeometryCollection\n  | GeoJsonFeature\n  | GeoJsonFeatureCollection;\n"]}