{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/helpers.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAKlC,SAAS,cAAc,CAAC,WAAmB;IACzC,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;AAC/C,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,4BAA4B,CAAC,WAAqB;IAChE,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7D,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,iCAAiC,CAC/C,oBAAmE;IAEnE,OAAO;QACL,UAAU,EAAE,oBAAoB,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YACpD,KAAK,EACH,GAAG;gBACH,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;qBACvB,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE;oBACd,mBAAmB;oBACnB,IAAI,OAAO,CAAC,KAAK,WAAW,IAAI,CAAC,KAAK,IAAI,EAAE;wBAC1C,OAAO,EAAE,CAAC;qBACX;oBACD,oCAAoC;oBACpC,IAAI,CAAC,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,UAAU,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE;wBAC/D,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;qBAClC;oBACD,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;gBACrB,CAAC,CAAC;qBACD,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;qBACvB,IAAI,CAAC,GAAG,CAAC;SACf,CAAC,CAAC;KACJ,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LatLon } from \"@azure/maps-common\";\nimport { BatchRequest, RouteGetRouteDirectionsQueryParamProperties } from \"./generated\";\n\nfunction toLatLonString(coordinates: LatLon): string {\n  return `${coordinates[0]},${coordinates[1]}`;\n}\n\n/**\n * Transform an array of [Latitude, Longtitute] to a string in the following format:\n * \"Latitude_1,Longtitute_1:Latitude_2,Longtitute_2:...\"\n *\n * @param coordinates - An array of Latitude/Longtitute pair to transform.\n * @returns The transformed string.\n */\nexport function toColonDelimitedLatLonString(coordinates: LatLon[]): string {\n  return coordinates.map((c) => toLatLonString(c)).join(\":\");\n}\n\n/**\n * Create a batch request body of a bunch of route direction requests.\n *\n * @param queryParamProperties - An object of the query parameters for a route direction request\n * @returns The composed batch request.\n */\nexport function createRouteDirectionsBatchRequest(\n  queryParamProperties: RouteGetRouteDirectionsQueryParamProperties[],\n): BatchRequest {\n  return {\n    batchItems: queryParamProperties.map((queryParam) => ({\n      query:\n        \"?\" +\n        Object.entries(queryParam)\n          .map(([k, v]) => {\n            // Skip if no value\n            if (typeof v === \"undefined\" || v === null) {\n              return \"\";\n            }\n            // Check name mappings: Array values\n            if ((k === \"departAt\" || k === \"arriveAt\") && v instanceof Date) {\n              return `${k}=${v.toISOString()}`;\n            }\n            return `${k}=${v}`;\n          })\n          .filter((s) => s !== \"\")\n          .join(\"&\"),\n    })),\n  };\n}\n"]}